version: "3.8"

services:
  postgres:
    image: postgres:15
    container_name: mlflow_postgres
    environment:
      POSTGRES_USER: mlflow
      POSTGRES_PASSWORD: mlflowpass
      POSTGRES_DB: mlflow_db
    ports:
      - "5432:5432"
    volumes:
      - mlflow_postgres_data:/var/lib/postgresql/data

  minio:
    image: minio/minio:latest
    container_name: mlflow_minio
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
      MINIO_INIT_BUCKETS: "mlflow-artifacts"
    command: server /data --console-address ":9001"
    ports:
      - "9000:9000"   # S3 API
      - "9001:9001"   # Web console
    volumes:
      - minio_data:/data

  mc:
    image: alpine:3.18
    container_name: minio_client
    depends_on:
      - minio
    entrypoint: >
      /bin/sh -c "
      apk add --no-cache curl bash mc;
      echo 'Waiting for MinIO...';
      until curl -s http://minio:9000/minio/health/live; do echo 'Still waiting...'; sleep 2; done;
      mc alias set local http://minio:9000 minioadmin minioadmin;
      mc mb --ignore-existing local/mlflow-artifacts;
      echo 'Bucket mlflow-artifacts is ready';
      tail -f /dev/null
      "



  mlflow:
    build: .
    container_name: mlflow_server
    environment:
      MLFLOW_TRACKING_URI: postgresql://mlflow:mlflowpass@postgres:5432/mlflow_db
      AWS_ACCESS_KEY_ID: minioadmin
      AWS_SECRET_ACCESS_KEY: minioadmin
      AWS_DEFAULT_REGION: us-east-1
      MLFLOW_S3_ENDPOINT_URL: http://minio:9000
      MLFLOW_DEFAULT_ARTIFACT_ROOT: s3://mlflow-artifacts
    ports:
      - "5000:5000"
    depends_on:
      - postgres
      - minio
      - mc
    command: >
      mlflow server --host 0.0.0.0 --port 5000 
      --backend-store-uri  ${MLFLOW_TRACKING_URI}
      --default-artifact-root ${MLFLOW_DEFAULT_ARTIFACT_ROOT} 
      --serve-artifacts

volumes:
  mlflow_postgres_data:
  minio_data:
